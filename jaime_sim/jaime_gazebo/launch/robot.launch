<launch>
    <arg name="robot_name"/>
    <arg name="init_pose_x"/>
    <arg name="init_pose_y"/>
    <arg name="init_pose"/>
    <arg name="model_type" default="jaime_asus"/>

    <param name="base_prefix" value="mobile_base"/>

    <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
     args="$(arg init_pose) -urdf -param /robot_description -model $(arg robot_name)"
     respawn="false" output="screen" />

    <node pkg="robot_state_publisher" type="state_publisher" 
          name="robot_state_publisher" output="screen"/>

    <!-- The odometry estimator, throttling, fake laser etc. go here -->
    <!-- All the stuff as from usual robot launch file -->

    <!-- PointCloud to LaserScan -->
    <!--node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_node" output="screen" >
    <remap from="cloud_in" to="xbox_kinetic/depth/points"/>
    <remap from="scan" to="xbox_kinetic/scan" />
    <param name="target_frame" value="$(arg robot_name)_tf/camara_profundidad"/>
    <rosparam>
        transform_tolerance: 0.01
        min_height: 0.0
        max_height: 1.0

        angle_min: -1.5708
        angle_max: 1.5708
        angle_increment: 0.0087
        scan_time: 0.3333
        range_min: 0.45
        range_max: 2.4
        use_inf: true

        #concurrency_level affects number of pc queued for processing and the number of threadsused
        # 0: Detect number of cores
        # 1: Single threaded
        # 2: inf : Parallelism level
        concurrency_level: 1
    </rosparam>
    </node-->
    
</launch>
